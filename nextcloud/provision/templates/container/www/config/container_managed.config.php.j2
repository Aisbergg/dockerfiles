<?php

$CONFIG = array(

/**
 * Your list of trusted domains that users can log into. Specifying trusted
 * domains prevents host header poisoning. Do not remove this, as it performs
 * necessary security checks.
 * You can specify:
 *
 * - the exact hostname of your host or virtual host, e.g. demo.example.org.
 * - the exact hostname with permitted port, e.g. demo.example.org:443.
 *   This disallows all other ports on this host
 * - use * as a wildcard, e.g. ubos-raspberry-pi*.local will allow
 *   ubos-raspberry-pi.local and ubos-raspberry-pi-2.local
 */
'trusted_domains' =>
array (
    {% for domainname in DOMAINNAMES %}'{{ domainname }}',
    {% endfor %}
  ),

/**
 * User Experience
 *
 * These optional parameters control some aspects of the user interface. Default
 * values, where present, are shown.
 */

/**
 * This sets the default language on your Nextcloud server, using ISO_639-1
 * language codes such as ``en`` for English, ``de`` for German, and ``fr`` for
 * French. It overrides automatic language detection on public pages like login
 * or shared items. User's language preferences configured under "personal ->
 * language" override this setting after they have logged in. Nextcloud has two
 * distinguished language codes for German, 'de' and 'de_DE'. 'de' is used for
 * informal German and 'de_DE' for formal German. By setting this value to 'de_DE'
 * you can enforce the formal version of German unless the user has chosen
 * something different explicitly.
 *
 * Defaults to ``en``
 */
'default_language' => '{{ NEXTCLOUD_DEFAULT_LANGUAGE }}',

/**
 * With this setting a language can be forced for all users. If a language is
 * forced, the users are also unable to change their language in the personal
 * settings. If users shall be unable to change their language, but users have
 * different languages, this value can be set to ``true`` instead of a language
 * code.
 *
 * Defaults to ``false``
 */
'force_language' => '{{ NEXTCLOUD_FORCE_LANGUAGE }}',

/**
 * This sets the default locale on your Nextcloud server, using ISO_639
 * language codes such as ``en`` for English, ``de`` for German, and ``fr`` for
 * French, and ISO-3166 country codes such as ``GB``, ``US``, ``CA``, as defined
 * in RFC 5646. It overrides automatic locale detection on public pages like
 * login or shared items. User's locale preferences configured under "personal
 * -> locale" override this setting after they have logged in.
 *
 * Defaults to ``en``
 */
'default_locale' => '{{ NEXTCLOUD_DEFAULT_LOCALE }}',

/**
 * With this setting a locale can be forced for all users. If a locale is
 * forced, the users are also unable to change their locale in the personal
 * settings. If users shall be unable to change their locale, but users have
 * different languages, this value can be set to ``true`` instead of a locale
 * code.
 *
 * Defaults to ``false``
 */
'force_locale' => '{{ NEXTCLOUD_FORCE_LANGUAGE }}',

/**
 * Set the default app to open on login. Use the app names as they appear in the
 * URL after clicking them in the Apps menu, such as documents, calendar, and
 * gallery. You can use a comma-separated list of app names, so if the first
 * app is not enabled for a user then Nextcloud will try the second one, and so
 * on. If no enabled apps are found it defaults to the Files app.
 *
 * Defaults to ``files``
 */
'defaultapp' => '{{ NEXTCLOUD_DEFAULTAPP }}',

/**
 * ``true`` enables the Help menu item in the user menu (top right of the
 * Nextcloud Web interface). ``false`` removes the Help item.
 */
'knowledgebaseenabled' => {{ NEXTCLOUD_KNOWLEDGEBASEENABLED }},

/**
 * ``true`` allows users to change their display names (on their Personal
 * pages), and ``false`` prevents them from changing their display names.
 */
'allow_user_to_change_display_name' => {{ NEXTCLOUD_ALLOW_USER_TO_CHANGE_DISPLAY_NAME  }},

/**
 * Lifetime of the remember login cookie. This should be larger than the
 * session_lifetime. If it is set to 0 remember me is disabled.
 *
 * Defaults to ``60*60*24*15`` seconds (15 days)
 */
'remember_login_cookie_lifetime' => {{ NEXTCLOUD_REMEMBER_LOGIN_COOKIE_LIFETIME }},

/**
 * The lifetime of a session after inactivity.
 *
 * Defaults to ``60*60*24`` seconds (24 hours)
 */
'session_lifetime' => {{ NEXTCLOUD_SESSION_LIFETIME }},

/**
 * Enable or disable session keep-alive when a user is logged in to the Web UI.
 * Enabling this sends a "heartbeat" to the server to keep it from timing out.
 *
 * Defaults to ``true``
 */
'session_keepalive' => {{ NEXTCLOUD_SESSION_KEEPALIVE }},

/**
 * Enforce token authentication for clients, which blocks requests using the user
 * password for enhanced security. Users need to generate tokens in personal settings
 * which can be used as passwords on their clients.
 *
 * Defaults to ``false``
 */
'token_auth_enforced' => {{ NEXTCLOUD_TOKEN_AUTH_ENFORCED }},

/**
 * Whether the bruteforce protection shipped with Nextcloud should be enabled or not.
 *
 * Disabling this is discouraged for security reasons.
 *
 * Defaults to ``true``
 */
'auth.bruteforce.protection.enabled' => {{ NEXTCLOUD_AUTH_BRUTEFORCE_PROTECTION_ENABLED }},

/**
 * The directory where the skeleton files are located. These files will be
 * copied to the data directory of new users. Leave empty to not copy any
 * skeleton files.
 * ``{lang}`` can be used as a placeholder for the language of the user.
 * If the directory does not exist, it falls back to non dialect (from ``de_DE``
 * to ``de``). If that does not exist either, it falls back to ``default``
 *
 * Defaults to ``core/skeleton`` in the Nextcloud directory.
 */
'skeletondirectory' => '/container/www/skeleton',

/**
 * The ``user_backends`` app (which needs to be enabled first) allows you to
 * configure alternate authentication backends. Supported backends are:
 * IMAP (OC_User_IMAP), SMB (OC_User_SMB), and FTP (OC_User_FTP).
 */
// 'user_backends' => array(
// 	array(
// 		'class' => 'OC_User_IMAP',
// 		'arguments' => array('{imap.gmail.com:993/imap/ssl}INBOX')
// 	)
// ),

/**
 * If your user backend does not allow password resets (e.g. when it's a
 * read-only user backend like LDAP), you can specify a custom link, where the
 * user is redirected to, when clicking the "reset password" link after a failed
 * login-attempt.
 * In case you do not want to provide any link, replace the url with 'disabled'
 */
'lost_password_link' => '{{ NEXTCLOUD_LOST_PASSWORD_LINK }}',


/**
 * Proxy Configurations
 */

/**
 * The automatic hostname detection of Nextcloud can fail in certain reverse
 * proxy and CLI/cron situations. This option allows you to manually override
 * the automatic detection; for example ``www.example.com``, or specify the port
 * ``www.example.com:8080``.
 */
'overwritehost' => '{{ NEXTCLOUD_OVERWRITEHOST }}',

/**
 * When generating URLs, Nextcloud attempts to detect whether the server is
 * accessed via ``https`` or ``http``. However, if Nextcloud is behind a proxy
 * and the proxy handles the ``https`` calls, Nextcloud would not know that
 * ``ssl`` is in use, which would result in incorrect URLs being generated.
 * Valid values are ``http`` and ``https``.
 */
'overwriteprotocol' => '{{ NEXTCLOUD_OVERWRITEPROTOCOL }}',

/**
 * Nextcloud attempts to detect the webroot for generating URLs automatically.
 * For example, if ``www.example.com/nextcloud`` is the URL pointing to the
 * Nextcloud instance, the webroot is ``/nextcloud``. When proxies are in use,
 * it may be difficult for Nextcloud to detect this parameter, resulting in
 * invalid URLs.
 */
'overwritewebroot' => '{{ NEXTCLOUD_OVERWRITEWEBROOT }}',

/**
 * This option allows you to define a manual override condition as a regular
 * expression for the remote IP address. For example, defining a range of IP
 * addresses starting with ``10.0.0.`` and ending with 1 to 3:
 * ``^10\.0\.0\.[1-3]$``
 *
 * Defaults to ``''`` (empty string)
 */
'overwritecondaddr' => '{{ NEXTCLOUD_OVERWRITECONDADDR }}',

/**
 * Use this configuration parameter to specify the base URL for any URLs which
 * are generated within Nextcloud using any kind of command line tools (cron or
 * occ). The value should contain the full base URL:
 * ``https://www.example.com/nextcloud``
 *
 * Defaults to ``''`` (empty string)
 */
'overwrite.cli.url' => 'https://{{ DOMAINNAMES[0] }}',

{% if NEXTCLOUD_PROXY != "" -%}
/**
 * The URL of your proxy server, for example ``proxy.example.com:8081``.
 *
 * Defaults to ``''`` (empty string)
 */
'proxy' => '{{ NEXTCLOUD_PROXY }}',
{%- endif %}

{% if NEXTCLOUD_PROXYUSERPWD != "" -%}
/**
 * The optional authentication for the proxy to use to connect to the internet.
 * The format is: ``username:password``.
 *
 * Defaults to ``''`` (empty string)
 */
'proxyuserpwd' => '{{ NEXTCLOUD_PROXYUSERPWD }}',
{%- endif %}


/**
 * Deleted Items (trash bin)
 *
 * These parameters control the Deleted files app.
 */

/**
 * If the trash bin app is enabled (default), this setting defines the policy
 * for when files and folders in the trash bin will be permanently deleted.
 * The app allows for two settings, a minimum time for trash bin retention,
 * and a maximum time for trash bin retention.
 * Minimum time is the number of days a file will be kept, after which it
 * may be deleted. Maximum time is the number of days at which it is guaranteed
 * to be deleted.
 * Both minimum and maximum times can be set together to explicitly define
 * file and folder deletion. For migration purposes, this setting is installed
 * initially set to "auto", which is equivalent to the default setting in
 * Nextcloud.
 *
 * Available values:
 *
 * * ``auto``
 *     default setting. keeps files and folders in the trash bin for 30 days
 *     and automatically deletes anytime after that if space is needed (note:
 *     files may not be deleted if space is not needed).
 * * ``D, auto``
 *     keeps files and folders in the trash bin for D+ days, delete anytime if
 *     space needed (note: files may not be deleted if space is not needed)
 * * ``auto, D``
 *     delete all files in the trash bin that are older than D days
 *     automatically, delete other files anytime if space needed
 * * ``D1, D2``
 *     keep files and folders in the trash bin for at least D1 days and
 *     delete when exceeds D2 days
 * * ``disabled``
 *     trash bin auto clean disabled, files and folders will be kept forever
 *
 * Defaults to ``auto``
 */
'trashbin_retention_obligation' => '{{ NEXTCLOUD_TRASHBIN_RETENTION_OBLIGATION }}',


/**
 * File versions
 *
 * These parameters control the Versions app.
 */

/**
 * If the versions app is enabled (default), this setting defines the policy
 * for when versions will be permanently deleted.
 * The app allows for two settings, a minimum time for version retention,
 * and a maximum time for version retention.
 * Minimum time is the number of days a version will be kept, after which it
 * may be deleted. Maximum time is the number of days at which it is guaranteed
 * to be deleted.
 * Both minimum and maximum times can be set together to explicitly define
 * version deletion. For migration purposes, this setting is installed
 * initially set to "auto", which is equivalent to the default setting in
 * Nextcloud.
 *
 * Available values:
 *
 * * ``auto``
 *     default setting. Automatically expire versions according to expire
 *     rules. Please refer to :doc:`../configuration_files/file_versioning` for
 *     more information.
 * * ``D, auto``
 *     keep versions at least for D days, apply expire rules to all versions
 *     that are older than D days
 * * ``auto, D``
 *     delete all versions that are older than D days automatically, delete
 *     other versions according to expire rules
 * * ``D1, D2``
 *     keep versions for at least D1 days and delete when exceeds D2 days
 * * ``disabled``
 *     versions auto clean disabled, versions will be kept forever
 *
 * Defaults to ``auto``
 */
'versions_retention_obligation' => '{{ NEXTCLOUD_VERSIONS_RETENTION_OBLIGATION }}',

/**
 * Nextcloud Verifications
 *
 * Nextcloud performs several verification checks. There are two options,
 * ``true`` and ``false``.
 */

/**
 * Checks an app before install whether it uses private APIs instead of the
 * proper public APIs. If this is set to true it will only allow to install or
 * enable apps that pass this check.
 *
 * Defaults to ``false``
 */
'appcodechecker' => {{ NEXTCLOUD_APPCODECHECKER }},

/**
 * Check if Nextcloud is up-to-date and shows a notification if a new version is
 * available.
 *
 * Defaults to ``true``
 */
'updatechecker' => {{ NEXTCLOUD_UPDATECHECKER }},

/**
 * URL that Nextcloud should use to look for updates
 *
 * Defaults to ``https://updates.nextcloud.com/updater_server/``
 */
'updater.server.url' => '{{ NEXTCLOUD_UPDATER_SERVER_URL }}',

/**
 * The channel that Nextcloud should use to look for updates
 *
 * Supported values:
 *   - ``daily``
 *   - ``beta``
 *   - ``stable``
 *   - ``production``
 */
'updater.release.channel' => '{{ NEXTCLOUD_UPDATER_RELEASE_CHANNEL }}',

/**
 * Is Nextcloud connected to the Internet or running in a closed network?
 *
 * Defaults to ``true``
 */
'has_internet_connection' => {{ NEXTCLOUD_HAS_INTERNET_CONNECTION }},

/**
 * Which domains to request to determine the availability of an Internet
 * connection. If none of these hosts are reachable, the administration panel
 * will show a warning. Set to an empty list to not do any such checks (warning
 * will still be shown).
 *
 * Defaults to the following domains:
 *
 *  - www.nextcloud.com
 *  - www.startpage.com
 *  - www.eff.org
 *  - www.edri.org
 */
'connectivity_check_domains' => array(
{% for domain in NEXTCLOUD_CONNECTIVITY_CHECK_DOMAINS %}
    '{{ domain }}'{% if not loop.last %},{% endif %}
{% endfor %}
),

/**
 * Allows Nextcloud to verify a working WebDAV connection. This is done by
 * attempting to make a WebDAV request from PHP.
 */
'check_for_working_webdav' => {{ NEXTCLOUD_CHECK_FOR_WORKING_WEBDAV }},

/**
 * Allows Nextcloud to verify a working .well-known URL redirects. This is done
 * by attempting to make a request from JS to
 * https://your-domain.com/.well-known/caldav/
 *
 * Defaults to ``true``
 */
'check_for_working_wellknown_setup' => {{ NEXTCLOUD_CHECK_FOR_WORKING_WELLKNOWN_SETUP }},

/**
 * In rare setups (e.g. on Openshift or docker on windows) the permissions check
 * might block the installation while the underlying system offers no means to
 * "correct" the permissions. In this case, set the value to false.
 *
 * In regular cases, if issues with permissions are encountered they should be
 * adjusted accordingly. Changing the flag is discouraged.
 *
 * Defaults to ``true``
 */
'check_data_directory_permissions' => {{ NEXTCLOUD_CHECK_DATA_DIRECTORY_PERMISSIONS | lower }},

/**
 * In certain environments it is desired to have a read-only configuration file.
 * When this switch is set to ``true`` Nextcloud will not verify whether the
 * configuration is writable. However, it will not be possible to configure
 * all options via the Web interface. Furthermore, when updating Nextcloud
 * it is required to make the configuration file writable again for the update
 * process.
 *
 * Defaults to ``false``
 */
'config_is_read_only' => {{ NEXTCLOUD_CONFIG_IS_READ_ONLY }},

/**
 * Logging
 */

/**
 * This parameter determines where the Nextcloud logs are sent.
 * ``file``: the logs are written to file ``nextcloud.log`` in the default
 * Nextcloud data directory. The log file can be changed with parameter
 * ``logfile``.
 * ``syslog``: the logs are sent to the system log. This requires a syslog daemon
 * to be active.
 * ``errorlog``: the logs are sent to the PHP ``error_log`` function.
 * ``systemd``: the logs are sent to the Systemd journal. This requires a system
 * that runs Systemd and the Systemd journal. The PHP extension ``systemd``
 * must be installed and active.
 *
 * Defaults to ``file``
 */
'log_type' => '{{ NEXTCLOUD_LOG_TYPE }}',

/**
 * Name of the file to which the Nextcloud logs are written if parameter
 * ``log_type`` is set to ``file``.
 *
 * Defaults to ``[datadirectory]/nextcloud.log``
 */
'logfile' => '/container/log/nextcloud.log',

/**
 * Log file mode for the Nextcloud loggin type in octal notation.
 *
 * Defaults to 0640 (writeable by user, readable by group).
 */
'logfilemode' => 0640,

/**
 * Loglevel to start logging at. Valid values are: 0 = Debug, 1 = Info, 2 =
 * Warning, 3 = Error, and 4 = Fatal. The default value is Warning.
 *
 * Defaults to ``2``
 */
'loglevel' => {{ NEXTCLOUD_LOGLEVEL }},

/**
 * If you maintain different instances and aggregate the logs, you may want
 * to distinguish between them. ``syslog_tag`` can be set per instance
 * with a unique id. Only available if ``log_type`` is set to ``syslog`` or
 * ``systemd``.
 *
 * The default value is ``Nextcloud``.
 */
'syslog_tag' => '{{ NEXTCLOUD_SYSLOG_TAG }}',

/**
 * Log condition for log level increase based on conditions. Once one of these
 * conditions is met, the required log level is set to debug. This allows to
 * debug specific requests, users or apps
 *
 * Supported conditions:
 *  - ``shared_secret``: if a request parameter with the name `log_secret` is set to
 *                this value the condition is met
 *  - ``users``:  if the current request is done by one of the specified users,
 *                this condition is met
 *  - ``apps``:   if the log message is invoked by one of the specified apps,
 *                this condition is met
 *
 * Defaults to an empty array.
 */
'log.condition' => {{ NEXTCLOUD_LOG_CONDITION }},

/**
 * This uses PHP.date formatting; see http://php.net/manual/en/function.date.php
 *
 * Defaults to ISO 8601 ``2005-08-15T15:52:01+00:00`` - see \DateTime::ATOM
 * (https://secure.php.net/manual/en/class.datetime.php#datetime.constants.atom)
 */
'logdateformat' => '{{ NEXTCLOUD_LOGDATEFORMAT }}',

/**
 * The timezone for logfiles. You may change this; see
 * http://php.net/manual/en/timezones.php
 *
 * Defaults to ``UTC``
 */
'logtimezone' => '{{ NEXTCLOUD_LOGTIMEZONE }}',

/**
 * Append all database queries and parameters to the log file. Use this only for
 * debugging, as your logfile will become huge.
 */
'log_query' => {{ NEXTCLOUD_LOG_QUERY }},

/**
 * Enables log rotation and limits the total size of logfiles. The default is 0,
 * or no rotation. Specify a size in bytes, for example 104857600 (100 megabytes
 * = 100 * 1024 * 1024 bytes). A new logfile is created with a new name when the
 * old logfile reaches your limit. If a rotated log file is already present, it
 * will be overwritten.
 *
 * Defaults to 100 MB
 */
'log_rotate_size' => {{ NEXTCLOUD_LOG_ROTATE_SIZE }},


/**
 * Alternate Code Locations
 *
 * Some of the Nextcloud code may be stored in alternate locations.
 */

/**
 * This section is for configuring the download links for Nextcloud clients, as
 * seen in the first-run wizard and on Personal pages.
 *
 * Defaults to:
 *  - Desktop client: ``https://nextcloud.com/install/#install-clients``
 *  - Android client: ``https://play.google.com/store/apps/details?id=com.nextcloud.client``
 *  - iOS client: ``https://itunes.apple.com/us/app/nextcloud/id1125420102?mt=8``
 *  - iOS client app id: ``1125420102``
 */
'customclient_desktop' =>
	'{{ NEXTCLOUD_CUSTOMCLIENT_DESKTOP }}',
'customclient_android' =>
	'{{ NEXTCLOUD_CUSTOMCLIENT_ANDROID }}',
'customclient_ios' =>
	'{{ NEXTCLOUD_CUSTOMCLIENT_IOS }}',
'customclient_ios_appid' =>
		'1125420102',
/**
 * Apps
 *
 * Options for the Apps folder, Apps store, and App code checker.
 */

/**
 * When enabled, admins may install apps from the Nextcloud app store.
 *
 * Defaults to ``true``
 */
'appstoreenabled' => {{ NEXTCLOUD_APPSTOREENABLED }},

/**
 * Use the ``apps_paths`` parameter to set the location of the Apps directory,
 * which should be scanned for available apps, and where user-specific apps
 * should be installed from the Apps store. The ``path`` defines the absolute
 * file system path to the app folder. The key ``url`` defines the HTTP Web path
 * to that folder, starting from the Nextcloud webroot. The key ``writable``
 * indicates if a Web server can write files to that folder.
 */
'apps_paths' => array(
  array(
		'path'=> '/container/www/apps',
		'url' => '/apps',
		'writable' => false,
	),
  array(
		'path'=> '/container/www/custom_apps',
		'url' => '/custom_apps',
		'writable' => true,
	),
),

/**
 * @see appcodechecker
 */


/**
 * Previews
 *
 * Nextcloud supports previews of image files, the covers of MP3 files, and text
 * files. These options control enabling and disabling previews, and thumbnail
 * size.
 */

/**
 * By default, Nextcloud can generate previews for the following filetypes:
 *
 * - Image files
 * - Covers of MP3 files
 * - Text documents
 *
 * Valid values are ``true``, to enable previews, or
 * ``false``, to disable previews
 *
 * Defaults to ``true``
 */
'enable_previews' => {{ NEXTCLOUD_ENABLE_PREVIEWS }},
/**
 * The maximum width, in pixels, of a preview. A value of ``null`` means there
 * is no limit.
 *
 * Defaults to ``4096``
 */
'preview_max_x' => {{ NEXTCLOUD_PREVIEW_MAX_X }},
/**
 * The maximum height, in pixels, of a preview. A value of ``null`` means there
 * is no limit.
 *
 * Defaults to ``4096``
 */
'preview_max_y' => {{ NEXTCLOUD_PREVIEW_MAX_Y }},

/**
 * max file size for generating image previews with imagegd (default behavior)
 * If the image is bigger, it'll try other preview generators, but will most
 * likely show the default mimetype icon. Set to -1 for no limit.
 *
 * Defaults to ``50`` megabytes
 */
'preview_max_filesize_image' => {{ NEXTCLOUD_PREVIEW_MAX_FILESIZE_IMAGE }},

/**
 * custom path for LibreOffice/OpenOffice binary
 *
 *
 * Defaults to ``''`` (empty string)
 */
'preview_libreoffice_path' => '/usr/bin/libreoffice',
/**
 * Use this if LibreOffice/OpenOffice requires additional arguments.
 *
 * Defaults to ``''`` (empty string)
 */
'preview_office_cl_parameters' => '{{ NEXTCLOUD_PREVIEW_OFFICE_CL_PARAMETERS }}',

/**
 * Only register providers that have been explicitly enabled
 *
 * The following providers are disabled by default due to performance or privacy
 * concerns:
 *
 *  - OC\Preview\Illustrator
 *  - OC\Preview\Movie
 *  - OC\Preview\MSOffice2003
 *  - OC\Preview\MSOffice2007
 *  - OC\Preview\MSOfficeDoc
 *  - OC\Preview\OpenDocument
 *  - OC\Preview\PDF
 *  - OC\Preview\Photoshop
 *  - OC\Preview\Postscript
 *  - OC\Preview\StarOffice
 *  - OC\Preview\SVG
 *  - OC\Preview\TIFF
 *  - OC\Preview\Font
 *
 * The following providers are not available in Microsoft Windows:
 *
 *  - OC\Preview\Movie
 *  - OC\Preview\MSOfficeDoc
 *  - OC\Preview\MSOffice2003
 *  - OC\Preview\MSOffice2007
 *  - OC\Preview\OpenDocument
 *  - OC\Preview\StarOffice
 *
 * Defaults to the following providers:
 *
 *  - OC\Preview\BMP
 *  - OC\Preview\GIF
 *  - OC\Preview\HEIC
 *  - OC\Preview\JPEG
 *  - OC\Preview\MarkDown
 *  - OC\Preview\MP3
 *  - OC\Preview\PNG
 *  - OC\Preview\TXT
 *  - OC\Preview\XBitmap
 */
'enabledPreviewProviders' => array(
  {% for preview_provider in NEXTCLOUD_ENABLEDPREVIEWPROVIDERS %}'{{ preview_provider }}',
  {% endfor %}
),

/**
 * LDAP
 *
 * Global settings used by LDAP User and Group Backend
 */

/**
 * defines the interval in minutes for the background job that checks user
 * existence and marks them as ready to be cleaned up. The number is always
 * minutes. Setting it to 0 disables the feature.
 * See command line (occ) methods ``ldap:show-remnants`` and ``user:delete``
 *
 * Defaults to ``51`` minutes
 */
'ldapUserCleanupInterval' => {{ NEXTCLOUD_LDAPUSERCLEANUPINTERVAL }},

/**
 * Sort groups in the user settings by name instead of the user count
 *
 * By enabling this the user count beside the group name is disabled as well.
 */
'sort_groups_by_name' => {{ NEXTCLOUD_SORT_GROUPS_BY_NAME|lower }},

/**
 * Comments
 *
 * Global settings for the Comments infrastructure
 */

/**
 * Replaces the default Comments Manager Factory. This can be utilized if an
 * own or 3rdParty CommentsManager should be used that – for instance – uses the
 * filesystem instead of the database to keep the comments.
 *
 * Defaults to ``\OC\Comments\ManagerFactory``
 */
'comments.managerFactory' => '{{ NEXTCLOUD_COMMENTS_MANAGERFACTORY }}',

/**
 * Replaces the default System Tags Manager Factory. This can be utilized if an
 * own or 3rdParty SystemTagsManager should be used that – for instance – uses the
 * filesystem instead of the database to keep the tags.
 *
 * Defaults to ``\OC\SystemTag\ManagerFactory``
 */
'systemtags.managerFactory' => '{{ NEXTCLOUD_SYSTEMTAGS_MANAGERFACTORY }}',

/**
 * Maintenance
 *
 * These options are for halting user activity when you are performing server
 * maintenance.
 */

/**
 * Enable maintenance mode to disable Nextcloud
 *
 * If you want to prevent users from logging in to Nextcloud before you start
 * doing some maintenance work, you need to set the value of the maintenance
 * parameter to true. Please keep in mind that users who are already logged-in
 * are kicked out of Nextcloud instantly.
 *
 * Defaults to ``false``
 */
'maintenance' => {{ NEXTCLOUD_MAINTENANCE }},


/**
 * SSL
 */

/**
 * Extra SSL options to be used for configuration.
  *
 * Defaults to an empty array.
 */
// 'openssl' => array(
// 	'config' => '/absolute/location/of/openssl.cnf',
// ),

/**
 * Memory caching backend configuration
 *
 * Available cache backends:
 *
 * * ``\OC\Memcache\APCu``       APC user backend
 * * ``\OC\Memcache\ArrayCache`` In-memory array-based backend (not recommended)
 * * ``\OC\Memcache\Memcached``  Memcached backend
 * * ``\OC\Memcache\Redis``      Redis backend
 *
 * Advice on choosing between the various backends:
 *
 * * APCu should be easiest to install. Almost all distributions have packages.
 *   Use this for single user environment for all caches.
 * * Use Redis or Memcached for distributed environments.
 *   For the local cache (you can configure two) take APCu.
 */

/**
 * Memory caching backend for locally stored data
 *
 * * Used for host-specific data, e.g. file paths
 *
 * Defaults to ``none``
 */
'memcache.local' => '\OC\Memcache\{{ NEXTCLOUD_MEMCACHE_LOCAL }}',

/**
 * Memory caching backend for distributed data
 *
 * * Used for installation-specific data, e.g. database caching
 * * If unset, defaults to the value of memcache.local
 *
 * Defaults to ``none``
 */
'memcache.distributed' => '\OC\Memcache\{{ NEXTCLOUD_MEMCACHE_DISTRIBUTED }}',

/**
 * Connection details for redis to use for memory caching in a single server configuration.
 *
 * For enhanced security it is recommended to configure Redis
 * to require a password. See http://redis.io/topics/security
 * for more information.
 */
'redis' => [
	'host' => '{{ NEXTCLOUD_REDIS_HOST }}', // can also be a unix domain socket: '/tmp/redis.sock'
	'port' => {{ NEXTCLOUD_REDIS_PORT }},
	'timeout' => {{ NEXTCLOUD_REDIS_TIMEOUT }},
	'password' => '{{ NEXTCLOUD_REDIS_PASSWORD }}', // Optional, if not defined no password will be used.
	'dbindex' => {{ NEXTCLOUD_REDIS_DBINDEX }}, // Optional, if undefined SELECT will not run and will use Redis Server's default DB Index.
],

/**
 * Connection details for a Redis Cluster
 *
 * Only for use with Redis Clustering, for Sentinel-based setups use the single
 * server configuration above, and perform HA on the hostname.
 *
 * Redis Cluster support requires the php module phpredis in version 3.0.0 or
 * higher.
 *
 * Available failover modes:
 *  - \RedisCluster::FAILOVER_NONE - only send commands to master nodes (default)
 *  - \RedisCluster::FAILOVER_ERROR - failover to slaves for read commands if master is unavailable (recommended)
 *  - \RedisCluster::FAILOVER_DISTRIBUTE - randomly distribute read commands across master and slaves
 *
 * WARNING: FAILOVER_DISTRIBUTE is a not recommended setting and we strongly
 * suggest to not use it if you use Redis for file locking. Due to the way Redis
 * is synchronized it could happen, that the read for an existing lock is
 * scheduled to a slave that is not fully synchronized with the connected master
 * which then causes a FileLocked exception.
 *
 * See https://redis.io/topics/cluster-spec for details about the Redis cluster
 */
/*
'redis.cluster' => [
	'seeds' => [ // provide some/all of the cluster servers to bootstrap discovery, port required
		'localhost:7000',
		'localhost:7001'
	],
	'timeout' => 0.0,
	'read_timeout' => 0.0,
	'failover_mode' => \RedisCluster::FAILOVER_ERROR
],*/


/**
 * Server details for one or more memcached servers to use for memory caching.
 */
'memcached_servers' => array(
	// hostname, port and optional weight. Also see:
	// http://www.php.net/manual/en/memcached.addservers.php
	// http://www.php.net/manual/en/memcached.addserver.php
  {% for memcached_server_string in NEXTCLOUD_MEMCACHED_SERVERS %}{% set memcached_server = memcached_server_string.split(':') %} array('{{ memcached_server[0] }}', {{ memcached_server[1] }}{% if len(memcached_server) > 2 %}, {{ memcached_server[2] }}{% endif %}),
  {% endfor %}
),

{% if NEXTCLOUD_MEMCACHE_LOCAL == 'Memcached' or NEXTCLOUD_MEMCACHE_DISTRIBUTED == 'Memcached' -%}
/**
 * Connection options for memcached, see http://apprize.info/php/scaling/15.html
 */
'memcached_options' => array(
	// Set timeouts to 50ms
	\Memcached::OPT_CONNECT_TIMEOUT => {{ NEXTCLOUD_MEMCACHED_OPT_CONNECT_TIMEOUT }},
	\Memcached::OPT_RETRY_TIMEOUT =>   {{ NEXTCLOUD_MEMCACHED_OPT_RETRY_TIMEOUT }},
	\Memcached::OPT_SEND_TIMEOUT =>    {{ NEXTCLOUD_MEMCACHED_OPT_SEND_TIMEOUT }},
	\Memcached::OPT_RECV_TIMEOUT =>    {{ NEXTCLOUD_MEMCACHED_OPT_RECV_TIMEOUT }},
	\Memcached::OPT_POLL_TIMEOUT =>    {{ NEXTCLOUD_MEMCACHED_OPT_POLL_TIMEOUT }},

	// Enable compression
	\Memcached::OPT_COMPRESSION =>          {{ NEXTCLOUD_MEMCACHED_OPT_COMPRESSION }},

	// Turn on consistent hashing
	\Memcached::OPT_LIBKETAMA_COMPATIBLE => {{ NEXTCLOUD_MEMCACHED_OPT_LIBKETAMA_COMPATIBLE }},

	// Enable Binary Protocol
	\Memcached::OPT_BINARY_PROTOCOL =>      {{ NEXTCLOUD_MEMCACHED_OPT_BINARY_PROTOCOL }},

	// Binary serializer vill be enabled if the igbinary PECL module is available
	//\Memcached::OPT_SERIALIZER => \Memcached::SERIALIZER_IGBINARY,
),
{%- endif %}


/**
 * Location of the cache folder, defaults to ``data/$user/cache`` where
 * ``$user`` is the current user. When specified, the format will change to
 * ``$cache_path/$user`` where ``$cache_path`` is the configured cache directory
 * and ``$user`` is the user.
 *
 * Defaults to ``''`` (empty string)
 */
'cache_path' => '{{ NEXTCLOUD_CACHE_PATH }}',

/**
 * TTL of chunks located in the cache folder before they're removed by
 * garbage collection (in seconds). Increase this value if users have
 * issues uploading very large files via the Nextcloud Client as upload isn't
 * completed within one day.
 *
 * Defaults to ``60*60*24`` (1 day)
 */
'cache_chunk_gc_ttl' => {{ NEXTCLOUD_CACHE_CHUNK_GC_TTL }},

/**
 * Using Object Store with Nextcloud
 */

/**
 * This example shows how to configure Nextcloud to store all files in a
 * swift object storage.
 *
 * It is important to note that Nextcloud in object store mode will expect
 * exclusive access to the object store container because it only stores the
 * binary data for each file. The metadata is currently kept in the local
 * database for performance reasons.
 *
 * WARNING: The current implementation is incompatible with any app that uses
 * direct file IO and circumvents our virtual filesystem. That includes
 * Encryption and Gallery. Gallery will store thumbnails directly in the
 * filesystem and encryption will cause severe overhead because key files need
 * to be fetched in addition to any requested file.
 *
 * One way to test is applying for a trystack account at http://trystack.org/
 */
 // 'objectstore' => [
 // 	'class' => 'OC\\Files\\ObjectStore\\Swift',
 // 	'arguments' => [
 // 		// trystack will user your facebook id as the user name
 // 		'username' => 'facebook100000123456789',
 // 		// in the trystack dashboard go to user -> settings -> API Password to
 // 		// generate a password
 // 		'password' => 'Secr3tPaSSWoRdt7',
 // 		// must already exist in the objectstore, name can be different
 // 		'container' => 'nextcloud',
 // 		// prefix to prepend to the fileid, default is 'oid:urn:'
 // 		'objectPrefix' => 'oid:urn:',
 // 		// create the container if it does not exist. default is false
 // 		'autocreate' => true,
 // 		// required, dev-/trystack defaults to 'RegionOne'
 // 		'region' => 'RegionOne',
 // 		// The Identity / Keystone endpoint
 // 		'url' => 'http://8.21.28.222:5000/v2.0',
 // 		// required on dev-/trystack
 // 		'tenantName' => 'facebook100000123456789',
 // 		// dev-/trystack uses swift by default, the lib defaults to 'cloudFiles'
 // 		// if omitted
 // 		'serviceName' => 'swift',
 // 		// The Interface / url Type, optional
 // 		'urlType' => 'internal'
 // 	],
 // ],

/**
 * To use swift V3
 */
/*
'objectstore' => [
	'class' => 'OC\\Files\\ObjectStore\\Swift',
	'arguments' => [
		'autocreate' => true,
		'user' => [
			'name' => 'swift',
			'password' => 'swift',
			'domain' => [
				'name' => 'default',
			],
		],
		'scope' => [
			'project' => [
				'name' => 'service',
				'domain' => [
					'name' => 'default',
				],
			],
		],
		'tenantName' => 'service',
		'serviceName' => 'swift',
		'region' => 'regionOne',
		'url' => 'http://yourswifthost:5000/v3',
		'bucket' => 'nextcloud',
	],
],
*/

/**
 * Sharing
 *
 * Global settings for Sharing
 */

/**
 * Replaces the default Share Provider Factory. This can be utilized if
 * own or 3rdParty Share Providers are used that – for instance – use the
 * filesystem instead of the database to keep the share information.
 *
 * Defaults to ``\OC\Share20\ProviderFactory``
 */
'sharing.managerFactory' => '{{ NEXTCLOUD_SHARING_MANAGERFACTORY }}',

/**
 * Define max number of results returned by the user search for auto-completion
 * Default is unlimited (value set to 0).
 */
'sharing.maxAutocompleteResults' => {{ NEXTCLOUD_SHARING_MAXAUTOCOMPLETERESULTS }},

/**
 * Define the minimum length of the search string before we start auto-completion
 * Default is no limit (value set to 0)
 */
'sharing.minSearchStringLength' => {{ NEXTCLOUD_SHARING_MINSEARCHSTRINGLENGTH }},


/**
 * All other configuration options
 */

/**
 * Additional driver options for the database connection, eg. to enable SSL
 * encryption in MySQL or specify a custom wait timeout on a cheap hoster.
 */
'dbdriveroptions' => array(
  {% for dbdriveropt in NEXTCLOUD_DBDRIVEROPTIONS %}{{ dbdriveropt }},
  {% endfor %}
),

/**
 * sqlite3 journal mode can be specified using this configuration parameter -
 * can be 'WAL' or 'DELETE' see for more details https://www.sqlite.org/wal.html
 */
'sqlite.journal_mode' => '{{ NEXTCLOUD_SQLITE_JOURNAL_MODE }}',

/**
 * During setup, if requirements are met (see below), this setting is set to true
 * and MySQL can handle 4 byte characters instead of 3 byte characters.
 *
 * If you want to convert an existing 3-byte setup into a 4-byte setup please
 * set the parameters in MySQL as mentioned below and run the migration command:
 * ./occ db:convert-mysql-charset
 * The config setting will be set automatically after a successful run.
 *
 * Consult the documentation for more details.
 *
 * MySQL requires a special setup for longer indexes (> 767 bytes) which are
 * needed:
 *
 * [mysqld]
 * innodb_large_prefix=ON
 * innodb_file_format=Barracuda
 * innodb_file_per_table=ON
 *
 * Tables will be created with
 *  * character set: utf8mb4
 *  * collation:     utf8mb4_bin
 *  * row_format:    compressed
 *
 * See:
 * https://dev.mysql.com/doc/refman/5.7/en/charset-unicode-utf8mb4.html
 * https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_large_prefix
 * https://mariadb.com/kb/en/mariadb/xtradbinnodb-server-system-variables/#innodb_large_prefix
 * http://www.tocker.ca/2013/10/31/benchmarking-innodb-page-compression-performance.html
 * http://mechanics.flite.com/blog/2014/07/29/using-innodb-large-prefix-to-avoid-error-1071/
 */
'mysql.utf8mb4' => {{ NEXTCLOUD_MYSQL_UTF8MB4 }},

/**
 * Database types that are supported for installation.
 *
 * Available:
 * 	- sqlite3 (SQLite3)
 * 	- mysql (MySQL)
 * 	- pgsql (PostgreSQL)
 * 	- oci (Oracle)
 *
 * Defaults to the following databases:
 *  - sqlite3 (SQLite3)
 *  - mysql (MySQL)
 *  - pgsql (PostgreSQL)
 */
'supportedDatabases' => array(
	'sqlite3',
	'mysql',
	'pgsql',
	'oci',
),

/**
 * Override where Nextcloud stores temporary files. Useful in situations where
 * the system temporary directory is on a limited space ramdisk or is otherwise
 * restricted, or if external storages which do not support streaming are in
 * use.
 *
 * The Web server user must have write access to this directory.
 */
'tempdirectory' => '/tmp/nextcloudtemp',

/**
 * The hashing cost used by hashes generated by Nextcloud
 * Using a higher value requires more time and CPU power to calculate the hashes
 */
'hashingCost' => {{ NEXTCLOUD_HASHINGCOST }},

/**
 * Blacklist a specific file or files and disallow the upload of files
 * with this name. ``.htaccess`` is blocked by default.
 * WARNING: USE THIS ONLY IF YOU KNOW WHAT YOU ARE DOING.
 *
 * Defaults to ``array('.htaccess')``
 */
'blacklisted_files' => array('.htaccess'),

/**
 * Define a default folder for shared files and folders other than root.
 *
 * Defaults to ``/``
 */
'share_folder' => '{{ NEXTCLOUD_SHARE_FOLDER }}',

/**
 * If you are applying a theme to Nextcloud, enter the name of the theme here.
 * The default location for themes is ``nextcloud/themes/``.
 *
 * Defaults to the theming app which is shipped since Nextcloud 9
 */
'theme' => '{{ NEXTCLOUD_THEME }}',

/**
 * The default cipher for encrypting files. Currently AES-128-CFB and
 * AES-256-CFB are supported.
 */
'cipher' => '{{ NEXTCLOUD_CIPHER }}',

/**
 * The minimum Nextcloud desktop client version that will be allowed to sync with
 * this server instance. All connections made from earlier clients will be denied
 * by the server. Defaults to the minimum officially supported Nextcloud desktop
 * clientversion at the time of release of this server version.
 *
 * When changing this, note that older unsupported versions of the Nextcloud desktop
 * client may not function as expected, and could lead to permanent data loss for
 * clients or other unexpected results.
 *
 * Defaults to ``2.0.0``
 */
'minimum.supported.desktop.version' => '{{ NEXTCLOUD_MINIMUM_SUPPORTED_DESKTOP_VERSION }}',

/**
 * EXPERIMENTAL: option whether to include external storage in quota
 * calculation, defaults to false.
 *
 * Defaults to ``false``
 */
'quota_include_external_storage' => {{ NEXTCLOUD_QUOTA_INCLUDE_EXTERNAL_STORAGE }},

/**
 * Specifies how often the local filesystem (the Nextcloud data/ directory, and
 * NFS mounts in data/) is checked for changes made outside Nextcloud. This
 * does not apply to external storages.
 *
 * 0 -> Never check the filesystem for outside changes, provides a performance
 * increase when it's certain that no changes are made directly to the
 * filesystem
 *
 * 1 -> Check each file or folder at most once per request, recommended for
 * general use if outside changes might happen.
 *
 * Defaults to ``0``
 */
'filesystem_check_changes' => {{ NEXTCLOUD_FILESYSTEM_CHECK_CHANGES }},

/**
 * By default Nextcloud will store the part files created during upload in the
 * same storage as the upload target. Setting this to false will store the part
 * files in the root of the users folder which might be required to work with certain
 * external storage setups that have limited rename capabilities.
 *
 * Defaults to ``true``
 */
'part_file_in_storage' => {{ NEXTCLOUD_PART_FILE_IN_STORAGE }},

/**
 * Where ``mount.json`` file should be stored, defaults to ``data/mount.json``
 * in the Nextcloud directory.
 *
 * Defaults to ``data/mount.json`` in the Nextcloud directory.
 */
'mount_file' => '/container/www/data/mount.json',

/**
 * When ``true``, prevent Nextcloud from changing the cache due to changes in
 * the filesystem for all storage.
 *
 * Defaults to ``false``
 */
'filesystem_cache_readonly' => {{ NEXTCLOUD_FILESYSTEM_CACHE_READONLY }},

/**
 * List of trusted proxy servers
 *
 * You may set this to an array containing a combination of
 * - IPv4 addresses, e.g. `192.168.2.123`
 * - IPv4 ranges in CIDR notation, e.g. `192.168.2.0/24`
 * - IPv6 addresses, e.g. `fd9e:21a7:a92c:2323::1`
 *
 * _(CIDR notation for IPv6 is currently work in progress and thus not
 * available as of yet)_
 *
 * When an incoming request's `REMOTE_ADDR` matches any of the IP addresses
 * specified here, it is assumed to be a proxy instead of a client. Thus, the
 * client IP will be read from the HTTP header specified in
 * `forwarded_for_headers` instead of from `REMOTE_ADDR`.
 *
 * So if you configure `trusted_proxies`, also consider setting
 * `forwarded_for_headers` which otherwise defaults to `HTTP_X_FORWARDED_FOR`
 * (the `X-Forwarded-For` header).
 *
 * Defaults to an empty array.
 */
'trusted_proxies' => array(
  {% for trusted_proxy in NEXTCLOUD_TRUSTED_PROXIES %}'{{ trusted_proxy }}',
  {% endfor %}
),

/**
 * Headers that should be trusted as client IP address in combination with
 * `trusted_proxies`. If the HTTP header looks like 'X-Forwarded-For', then use
 * 'HTTP_X_FORWARDED_FOR' here.
 *
 * If set incorrectly, a client can spoof their IP address as visible to
 * Nextcloud, bypassing access controls and making logs useless!
 *
 * Defaults to ``'HTTP_X_FORWARDED_FOR'``
 */
'forwarded_for_headers' => array(
  {% for header in NEXTCLOUD_FORWARDED_FOR_HEADERS %}'{{ header }}',
  {% endfor %}
),

/**
 * max file size for animating gifs on public-sharing-site.
 * If the gif is bigger, it'll show a static preview
 *
 * Value represents the maximum filesize in megabytes. Set to ``-1`` for
 * no limit.
 *
 * Defaults to ``10`` megabytes
 */
'max_filesize_animated_gifs_public_sharing' => {{ NEXTCLOUD_MAX_FILESIZE_ANIMATED_GIFS_PUBLIC_SHARING }},


/**
 * Enables transactional file locking.
 * This is enabled by default.
 *
 * Prevents concurrent processes from accessing the same files
 * at the same time. Can help prevent side effects that would
 * be caused by concurrent operations. Mainly relevant for
 * very large installations with many users working with
 * shared files.
 *
 * Defaults to ``true``
 */
'filelocking.enabled' => {{ NEXTCLOUD_FILELOCKING_ENABLED }},

/**
 * Set the lock's time-to-live in seconds.
 *
 * Any lock older than this will be automatically cleaned up.
 *
 * Defaults to ``60*60`` seconds (1 hour) or the php
 *             max_execution_time, whichever is higher.
 */
'filelocking.ttl' => {{ NEXTCLOUD_FILELOCKING_TTL }},

/**
 * Memory caching backend for file locking
 *
 * Because most memcache backends can clean values without warning using redis
 * is highly recommended to *avoid data loss*.
 *
 * Defaults to ``none``
 */
'memcache.locking' => '{{ '\OC\Memcache\Redis' if NEXTCLOUD_MEMCACHE_LOCKING_ENABLED }}',

/**
 * Enable locking debug logging
 *
 * Note that this can lead to a very large volume of log items being written which can lead
 * to performance degradation and large log files on busy instance.
 *
 * Thus enabling this in production for longer periods of time is not recommended
 * or should be used together with the ``log.condition`` setting.
 */
'filelocking.debug' => {{ NEXTCLOUD_FILELOCKING_DEBUG }},

/**
 * Disable the web based updater
 */
'upgrade.disable-web' => {{ NEXTCLOUD_UPGRADE_DISABLE_WEB }},

/**
 * Set this Nextcloud instance to debugging mode
 *
 * Only enable this for local development and not in production environments
 * This will disable the minifier and outputs some additional debug information
 *
 * Defaults to ``false``
 */
'debug' => {{ NEXTCLOUD_DEBUG }},

/**
 * Sets the data-fingerprint of the current data served
 *
 * This is a property used by the clients to find out if a backup has been
 * restored on the server. Once a backup is restored run
 * ./occ maintenance:data-fingerprint
 * To set this to a new value.
 *
 * Updating/Deleting this value can make connected clients stall until
 * the user has resolved conflicts.
 *
 * Defaults to ``''`` (empty string)
 */
'data-fingerprint' => '{{ NEXTCLOUD_DATA_FINGERPRINT }}',

/**
 * use a custom lookup server to publish user data
 */
'lookup_server' => '{{ NEXTCLOUD_LOOKUP_SERVER }}',

/**
 * set to true if the server is used in a setup based on Nextcloud's Global Scale architecture
 */
'gs.enabled' => {{ NEXTCLOUD_GS_ENABLED }},

/**
 * by default federation is only used internally in a Global Scale setup
 * If you want to allow federation outside of your environment set it to 'global'
 */
'gs.federation' => '{{ NEXTCLOUD_GS_FEDERATION }}',

/**
 * List of incompatible user agents opted out from Same Site Cookie Protection.
 * Some user agents are notorious and don't really properly follow HTTP
 * specifications. For those, have an opt-out.
 *
 * WARNING: only use this if you know what you are doing
 */
'csrf.optout' => array(
	'/^WebDAVFS/', // OS X Finder
	'/^Microsoft-WebDAV-MiniRedir/', // Windows webdav drive
),

/**
 * By default there is on public pages a link shown that allows users to
 * learn about the "simple sign up" - see https://nextcloud.com/signup/
 *
 * If this is set to "false" it will not show the link.
 */
'simpleSignUpLink.shown' => {{ NEXTCLOUD_SIMPLESIGNUPLINK_SHOWN }},

/**
 * By default autocompletion is enabled for the login form on Nextcloud's login page.
 * While this is enabled, browsers are allowed to "remember" login names and such.
 * Some companies require it to be disabled to comply with their security policy.
 *
 * Simply set this property to "false", if you want to turn this feature off.
 */

'login_form_autocomplete' => {{ NEXTCLOUD_LOGIN_FORM_AUTOCOMPLETE }},
);

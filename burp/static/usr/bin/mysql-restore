#!/bin/bash

USAGE="Usage: $0 [OPTIONS] DATABASE DUMP_FILE

Restore a single MySQL database.

OPTIONS:
    --help              Show this help message and exit
    -h, --host          Database host (mysql)
    -p, --password      Database password
    -P, --port          Port (3306)
    -u, --user          Database user"

db_name=""
db_user=""
db_password=""
db_host="mysql"
db_port=3306
dump_filename=""

args=$(getopt -o "f:h:n:p:P:u:" -l "help,host:,password:,port:,user:" -- "$@")
eval set -- "$args"
while [[ $# > 0 ]]; do
    case "$1" in
        --help) echo "$USAGE"; exit 0;;
        -h|--host) db_host="$2"; shift 2;;
        -p|--password) db_password="$2"; shift 2;;
        -P|--port) db_port="$2"; shift 2;;
        -u|--user) db_user="$2"; shift 2;;
        --) shift ; break ;;
        *) echo "Unknown option '$1'"; exit 1;;
    esac
done
if [[ $# > 0 ]]; then db_name="$1"; shift 1; else echo "Missing database name"; exit 1; fi
if [[ $# > 0 ]]; then dump_file="$1"; shift 1; else echo "Missing dump filename"; exit 1; fi
if [[ -z "$db_name" ]]; then echo "Missing database name"; exit 1; fi
if [[ -z "$db_user" ]]; then echo "Missing database user"; exit 1; fi
if [[ -z "$db_password" ]]; then echo "Missing database password"; exit 1; fi
if [[ -z "$dump_file" ]]; then echo "Missing dump file" ; exit 1; fi

if [[ -f "$dump_file" ]]; then
    dump_file="$dump_file"
elif [[ -f "${dump_file}.sql" ]]; then
    dump_file="${dump_file}.sql"
elif [[ -f "${dump_file}.gz" ]]; then
    dump_file="${dump_file}.sql.gz"
else
    echo "Dump file doesn't exist: $dump_file"
    exit 1
fi

# check if GZip compressed
if [[ "$(file -b --mime-type "${dump_file}")" == "application/x-gzip" ]]; then
    zcat "$dump_file" | mysql --host=$db_host --protocol=TCP --force --user=$db_user --password=$db_password $db_name
    exit $?
else
    mysql --host=$db_host --protocol=TCP --force --user=$db_user --password=$db_password $db_name < "$dump_file"
    exit $?
fi

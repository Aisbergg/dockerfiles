# container_managed=true                                                       #
#                                                                              #
# NOTE: by default this file is automatically generated on container startup.  #
# To disable the autogeneration simply change the first line of this file to   #
# 'container_managed=false'                                                    #
################################################################################
{% macro bool(val) -%}{{ '1' if val else '0' }}{%- endmacro %}

mode = client

server = {{ BURP_CLIENT_SERVER_HOST }}
port = {{ BURP_CLIENT_SERVER_PORT }}
status_port = {{ BURP_CLIENT_SERVER_STATUS_PORT }}
password = {{ BURP_CLIENT_PASSWORD }}
cname = {{ BURP_CLIENT_CNAME }}

# Choose the protocol to use.
# 0 to decide automatically, 1 to force protocol1 mode (file level granularity
# with a pseudo mirrored storage on the server and optional rsync). 2 forces
# protocol2 mode (inline deduplication with variable length blocks).
protocol = {{ BURP_CLIENT_PROTOCOL }}
pidfile = /var/run/container/burp.client.pid
syslog = 0
stdout = 1
progress_counter = 0
{% if BURP_CLIENT_RATELIMIT > 0.0 -%}
# Ratelimit throttles the send speed. Specified in Megabits per second (Mb/s).
ratelimit = {{ BURP_CLIENT_RATELIMIT }}
{%- endif %}

# Network timeout defaults to 7200 seconds (2 hours).
network_timeout = {{ BURP_CLIENT_NETWORK_TIMEOUT }}
# Wait a random number of seconds between 0 and the given number before
# contacting the server on a timed backup.
randomise = {{ BURP_CLIENT_RANDOMISE }}

# Set server_can_restore to 0 if you do not want the server to be able to
# initiate a restore (setting it to 1 also requires 'restoreprefix').
server_can_restore = {{ bool(BURP_CLIENT_SERVER_CAN_RESTORE) }}
# This option is prefixed to the path of all restores, and is overridden by
# '-d' on the command line.
restoreprefix = {{ BURP_CLIENT_RESTOREPREFIX }}

# Set server_can_override_includes to 0 if you do not want the server to be
# able to override the local include/exclude list. The default is 1.
server_can_override_includes = {{ bool(BURP_CLIENT_SERVER_CAN_OVERRIDE_INCLUDES) }}

{% if BURP_CLIENT_ENCRYPTION_PASSWORD != "" -%}
# Set an encryption password if you do not trust the server with your data.
# Note that this will mean that network deltas will not be possible. Each time
# a file changes, the whole file will be transferred on the next backup.
encryption_password = {{ BURP_CLIENT_ENCRYPTION_PASSWORD }}
{%- endif %}

# More configuration files can be read, using syntax like the following
# (without the leading '# ').
. client-inc/*.conf

# Uncomment the following lines to automatically generate a certificate signing
# request and send it to the server.
ca_burp_ca = /usr/sbin/burp_ca
ca_csr_dir = /container/tls/CA-client

# SSL certificate authority - same file on both server and client
ssl_cert_ca = {{ BURP_CLIENT_SSL_CERT_CA }}

# Client SSL certificate
ssl_cert = {{ BURP_CLIENT_SSL_CERT }}

# Client SSL key
ssl_key = {{ BURP_CLIENT_SSL_KEY }}

# Client SSL ciphers
ssl_ciphers = EECDH+AESGCM:EDH+AESGCM

# Client SSL compression. Default is zlib5. Set to zlib0 to turn it off.
ssl_compression = zlib0

{% if BURP_CLIENT_SSL_KEY_PASSWORD != "" -%}
# SSL key password, for loading a certificate with encryption.
ssl_key_password = {{ BURP_CLIENT_SSL_KEY_PASSWORD }}
{%- endif %}

# Common name in the certificate that the server gives us
ssl_peer_cn = {{ BURP_CLIENT_SSL_PEER_CN }}

# pre/post scripts
{% if BURP_CLIENT_BACKUP_SCRIPT_PRE != "" -%}
backup_script_pre = {{ BURP_CLIENT_BACKUP_SCRIPT_PRE }}
{%- endif %}
{% if BURP_CLIENT_BACKUP_SCRIPT_POST != "" -%}
backup_script_post = {{ BURP_CLIENT_BACKUP_SCRIPT_POST }}
{%- endif %}
{% if BURP_CLIENT_RESTORE_SCRIPT_PRE != "" -%}
restore_script_pre = {{ BURP_CLIENT_RESTORE_SCRIPT_PRE }}
{%- endif %}
{% if BURP_CLIENT_RESTORE_SCRIPT_POST != "" -%}
restore_script_post = {{ BURP_CLIENT_RESTORE_SCRIPT_POST }}
{%- endif %}

# The following options specify exactly what to backup.
# The server will override them if there is at least one 'include=' line on
# the server side and 'server_can_override_includes=1'.

# Includes
{% if BURP_CLIENT_BACKUP_SCRIPT_PRE == "/container/burp/pre-backup.sh" -%}
include = /tmp/backup
{%- endif %}
{% for path in BURP_CLIENT_INCLUDE %}
include = {{ path }}
{%- endfor %}
{% for path in BURP_CLIENT_INCLUDE_GLOB %}
include_glob = {{ path }}
{%- endfor %}
{% for path in BURP_CLIENT_INCLUDE_EXT %}
include_ext = {{ path }}
{%- endfor %}
{% for path in BURP_CLIENT_INCLUDE_FS %}
include_fs = {{ path }}
{%- endfor %}

# Excludes
{% for path in BURP_CLIENT_EXCLUDE %}
exclude = {{ path }}
{%- endfor %}
{% for path in BURP_CLIENT_EXCLUDE_REGEX %}
exclude_regex = {{ path }}
{%- endfor %}
{% for path in BURP_CLIENT_EXCLUDE_EXT %}
exclude_ext = {{ path }}
{%- endfor %}
{% for path in BURP_CLIENT_EXCLUDE_FS %}
exclude_fs = {{ path }}
{%- endfor %}

# Exclude files based on size. Defaults are 0, which means no limit.
min_file_size = {{ BURP_CLIENT_MIN_FILE_SIZE }}
max_file_size = {{ BURP_CLIENT_MAX_FILE_SIZE }}

{% for path in BURP_CLIENT_CROSS_FILESYSTEM %}
cross_filesystem = {{ path }}
{%- endfor %}
cross_all_filesystems = {{ bool(BURP_CLIENT_CROSS_ALL_FILESYSTEMS) }}

# The content of directories containing a filesystem entry named like this
# will not be backed up.
{% for file_name in BURP_CLIENT_EXCLUDE_FS %}
nobackup = {{ file_name }}
{%- endfor %}

# By default, burp backups up the fifos themselves, rather than reading from
# them. These two options let you choose a particular fifo to read, or read
# from all fifos.
#read_fifo=/path/to/a/fifo
#read_all_fifos=0
# The same for block device nodes.
#read_blockdev=/path/to/a/blockdev
#read_all_blockdevs=0

# If acl support is compiled into burp, this allows you to decide whether or not
# to backup acls at runtime.
acl = {{ bool(BURP_CLIENT_ACL) }}

# If xattr support is compiled into burp, this allows you to decide whether or
# not to backup xattrs at runtime.
xattr = {{ bool(BURP_CLIENT_XATTR) }}


# When backing up, whether to enable O_NOATIME when opening files and
# directories. The default is atime=0, which enables O_NOATIME.
#atime=1
# When enabled, this causes problems in the phase1 scan (such as an 'include'
# being missing) to be treated as fatal errors. The default is 0.
scan_problem_raises_error = {{ bool(BURP_CLIENT_SCAN_PROBLEM_RAISES_ERROR) }}

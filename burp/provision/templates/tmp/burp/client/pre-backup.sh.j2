#!/usr/bin/env bash
# container_managed=true                                                       #
#                                                                              #
# NOTE: by default this file is automatically generated on container startup.  #
# To disable the autogeneration simply change the first line of this file to   #
# 'container_managed=false'                                                    #
################################################################################

umask 0077
tmp_backup_dir="/tmp/backup"
mkdir -p "$tmp_backup_dir"

{% if MYSQL_DATABASES|length > 0 -%}
##
## Backup MySQL Databases
##

mysql_dump_dir="$tmp_backup_dir/mysql_dumps"
mkdir -p "$mysql_dump_dir"

mysql_host="{{ MYSQL_HOST }}"
mysql_port="{{ MYSQL_PORT }}"
mysql_user="{{ MYSQL_USER }}"
mysql_password="{{ MYSQL_PASSWORD }}"

{% for mysql_database_name in MYSQL_DATABASES %}
mysql-dump -h "$mysql_host" -P "$mysql_port" -u "$mysql_user" -p "$mysql_password" {{ mysql_database_name }} "$mysql_dump_dir/{{ mysql_database_name }}.sql"
{%- endfor %}
{%- endif %}

##
## Create Restore Scripts
##

# general restore script
cat > "$tmp_backup_dir/post-restore.sh" <<EOF
#!/usr/bin/env bash

# restore MySQL databases
if [[ -d "$mysql_dump_dir" ]]; then
    for t in "$mysql_dump_dir/"*.sh; do
        env "\$t"
    done
fi

rm -rf "$tmp_backup_dir"
EOF
chmod 700 "$tmp_backup_dir/post-restore.sh"

{% if MYSQL_DATABASES|length > 0 -%}
{% for mysql_database_name in MYSQL_DATABASES %}
# restore script for '{{ mysql_database_name }}' database
cat > "$mysql_dump_dir/restore-{{ mysql_database_name }}.sh" <<EOF
#!/usr/bin/env bash
mysql_host="{{ MYSQL_HOST }}"
mysql_port="{{ MYSQL_PORT }}"
mysql_user="{{ MYSQL_USER }}"
mysql_password="{{ MYSQL_PASSWORD }}"
mysql_database="{{ mysql_database_name }}"

mysql-restore -h "\$mysql_host" -P "\$mysql_port" -u "\$mysql_user" -p "\$mysql_password" "\$mysql_database" "\$(dirname \$0)/\${mysql_database}.sql"
EOF
{% endfor %}
chmod 700 "$mysql_dump_dir/"*.sh
{%- endif %}

FROM golang:alpine as build
WORKDIR /usr/local/src
RUN apk add --update --no-cache --no-progress git &&\
    go get -v -u github.com/ochinchina/supervisord &&\
    CGO_ENABLED=0 GOOS=linux go build -a -ldflags "-extldflags -static" -o /usr/bin/supervisord github.com/ochinchina/supervisord

#-------------------------------------------------------------------------------

FROM ubuntu:17.10

ARG LANG=en_US.UTF-8
ARG CREATED
ARG APT_CACHER_NG
ARG UBUNTU_MIRROR=http://archive.ubuntu.com/ubuntu/

LABEL org.opencontainers.image.title="Base Image - Ubuntu" \
    org.opencontainers.image.version="17.10" \
    org.opencontainers.image.description="A base image build upon Ubuntu" \
    org.opencontainers.image.url="https://www.ubuntu.com" \
    org.opencontainers.image.licenses="MIT" \
    org.opencontainers.image.authors="Andre Lehmann <aisberg@posteo.de>" \
    org.opencontainers.image.source="https://github.com/Aisbergg/dockerfiles/base" \
    org.opencontainers.image.created="$CREATED"

ENV TERM=xterm \
    DEBIAN_FRONTEND=noninteractive \
    LANG=$LANG \
    LC_ALL=$LANG \
    TINI_VERSION=v0.17.0 \
    TINI_PGP_KEY_ID=595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7

COPY --from=build /usr/bin/supervisord /usr/bin/supervisord

RUN echo 'APT::Install-Recommends 0;' >> /etc/apt/apt.conf.d/01norecommends &&\
    echo 'APT::Install-Suggests 0;' >> /etc/apt/apt.conf.d/01norecommends &&\
    echo "deb $UBUNTU_MIRROR artful main universe multiverse restricted\ndeb $UBUNTU_MIRROR artful-updates main universe multiverse restricted\ndeb $UBUNTU_MIRROR artful-backports main universe multiverse restricted\ndeb $UBUNTU_MIRROR artful-security main universe multiverse" > /etc/apt/sources.list &&\
    if [ -n "$APT_CACHER_NG" ]; then echo "Acquire::http { Proxy \"$APT_CACHER_NG\"; };" >> /etc/apt/apt.conf.d/01proxy; fi &&\
    apt-get update &&\
    `#----- fix some problems -----#` &&\
    dpkg-divert --local --rename --add /sbin/initctl &&\
    ln -sf /bin/true /sbin/initctl &&\
    dpkg-divert --local --rename --add /usr/bin/ischroot &&\
    ln -sf /bin/true /usr/bin/ischroot &&\
    unset http_proxy https_proxy &&\
    `#----- generate locales -----#` &&\
    apt-get install -y locales &&\
    sed -i -e "s/# $LANG/$LANG/" /etc/locale.gen &&\
    dpkg-reconfigure --frontend=noninteractive locales && \
    update-locale language=$LANG &&\
    `#----- install packages -----#` &&\
    apt-get install -y \
        ca-certificates \
        git \
        dirmngr \
        iputils-ping \
        nano \
        python3 \
        python3-pip \
        python3-setuptools \
        python3-wheel \
        unzip \
        runit \
        vim.tiny \
        wget \
        xz-utils &&\
    wget -q "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini" -O /sbin/tini &&\
    wget -q "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc" -O /tmp/tini.asc &&\
    ( gpg --keyserver ipv4.pool.sks-keyservers.net --keyserver-options timeout=10 --recv-keys "$TINI_PGP_KEY_ID" \
        || gpg --keyserver pgp.mit.edu --keyserver-options timeout=10 --recv-keys "$TINI_PGP_KEY_ID" \
        || gpg --keyserver keyserver.pgp.com --keyserver-options timeout=10 --recv-keys "$TINI_PGP_KEY_ID" ) &&\
    gpg --verify /tmp/tini.asc /sbin/tini &&\
    pip3 install --upgrade pip &&\
    pip3 install supervisor-logging &&\
    pip3 install supervisor-logstash-notifier &&\
    pip3 install git+https://github.com/Aisbergg/python-templer.git@v1.0.2 &&\
    pip3 install git+https://github.com/Aisbergg/python-confmerge.git@v0.1.1 &&\
    `#----- cleanup -----#` &&\
    rm -rf /var/lib/apt/lists/* /var/cache/* /tmp/tini.asc

COPY provision /provision
COPY static /
RUN mkdir -p \
        /etc/supervisor/conf.d \
        /usr/local/src \
        /var/log/supervisor \
        /var/run/supervisor &&\
    find /provision -type f -exec chmod 0664 {} + &&\
    find /provision -type d -exec chmod 0775 {} + &&\
    chmod 0644 /etc/bash.bashrc &&\
    chmod 0755 /entrypoint

ENTRYPOINT ["/entrypoint"]
CMD ["run"]

# autogen true

#######################################
#             Upstream                #
#######################################

upstream mattermost {
    server 127.0.0.1:8065;
}

#######################################
#            HTTP & HTTPS             #
#######################################

server {
    listen                 80;
    listen                 443 ssl default_server;
    {% if DOMAINNAMES is defined -%}
    server_name            {% for domain in DOMAINNAMES %} {{ domain }}{% endfor %};
    {%- endif %}

    # Let's Encrypt challenge response uri
    location ^~ /.well-known/acme-challenge {
        default_type "text/plain";
        root /var/www/letsencrypt-challenge-response;
    }

    location / {
        {% if NGINX_TLS_ONLY -%}
        if ($real_scheme != "https") {
            return 301 https://$host$request_uri;
        }
        {%- endif %}

        # block crawler ( see ../nginx.conf )
        if ($limit_bots = 1) {
            return 403;
        }

        # prevent SYN-flood
        # limit concurrent connections per ip
        limit_conn conn_limit_per_ip {{ NGINX_CONN_LIMIT_PER_IP }};
        # limit requests per second per ip
        limit_req zone=req_limit_per_ip burst={{ NGINX_REQ_LIMIT_PER_IP_BURST }};

        # pass request to mattermost server
        proxy_read_timeout   {{ NGINX_PROXY_READ_TIMEOUT }};
        proxy_pass           http://mattermost;
        proxy_set_header     Host                $http_host;
        proxy_set_header     X-Real-IP           $proxy_add_x_forwarded_for;
        proxy_set_header     X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header     X-Forwarded-Proto   $real_scheme;
        proxy_set_header     X-Frame-Options     SAMEORIGIN;
        # strip 'Proxy' header (see httpoxy vulnerability)
        proxy_set_header     Proxy               "";
        proxy_buffering      off;
        proxy_http_version   1.1;  # recommended with keepalive connections
        # WebSocket proxying - from http://nginx.org/en/docs/http/websocket.html
        proxy_set_header     Upgrade             $http_upgrade;
        proxy_set_header     Connection          $connection_upgrade;
    }
}

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}
